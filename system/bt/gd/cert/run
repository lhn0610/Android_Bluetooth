#! /bin/bash

if [[ -z "${ANDROID_BUILD_TOP}" ]]; then
  echo "ANDROID_BUILD_TOP is not set"
fi

if [[ -z "${ANDROID_HOST_OUT}" ]]; then
  echo "ANDROID_HOST_OUT is not set for host run"
fi

if ! [ -x "$(command -v python3.8)" ] ; then
    echo "You must have python 3.8 installed"
    exit 1
fi

$ANDROID_BUILD_TOP/build/soong/soong_ui.bash --build-mode --"all-modules" --dir="$(pwd)" dist bluetooth_stack_with_facade
if [[ $? -ne 0 ]] ; then
    echo "Failed to build bluetooth_stack_with_facade"
    exit 1
fi

TEST_CONFIG="$ANDROID_BUILD_TOP/system/bt/gd/cert/android_devices_config.json"
TEST_FILTER="-tf $ANDROID_BUILD_TOP/system/bt/gd/cert/all_cert_testcases"
CLEAN_VENV=false
NUM_REPETITIONS="1"

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"
case $key in
    --test_filter=*)
    TEST_FILTER="-tc ${key#*=}"
    shift # past argument=value
    ;;
    --host)
    TEST_CONFIG=$ANDROID_BUILD_TOP/system/bt/gd/cert/host_config.json
    shift # past argument
    ;;
    --test_file=*)
    TEST_FILTER="-tc ${key#*=}"
    shift # past argument
    ;;
    --test_config=*)
    TEST_CONFIG="${key#*=}"
    shift # past argument
    ;;
    # This will delete the existing venv before running the test
    # If you updated external libraries such as ACTS, you need to add this flag
    --clean)
    CLEAN_VENV=true
    shift # past argument
    ;;
    # Repeat running the specified test cases by N times in one single setup
    --repeat=*)
    NUM_REPETITIONS="${key#*=}"
    shift # past argument
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

CERT_TEST_VENV=$ANDROID_BUILD_TOP/out/dist/bluetooth_venv

YELLOW="\033[1;33m"
NOCOLOR="\033[0m"

INSTALL_ARGS="--reuse-acts"
if [ "$CLEAN_VENV" == true ] ; then
  echo -e "${YELLOW}Cleaning up existing virtualenv${NOCOLOR}"
  rm -rf $CERT_TEST_VENV
  INSTALL_ARGS=""
else
  echo -e "${YELLOW}Try to reuse existing virtualenv at ${CERT_TEST_VENV}${NOCOLOR}"
fi

python3.8 -m virtualenv --python `which python3.8` $CERT_TEST_VENV
if [[ $? -ne 0 ]] ; then
    echo "Error setting up virtualenv"
    exit 1
fi

unzip -o -q $ANDROID_BUILD_TOP/out/dist/bluetooth_cert_tests.zip -d $CERT_TEST_VENV/acts
if [[ $? -ne 0 ]] ; then
    echo "Error unzipping bluetooth_cert_tests.zip"
    exit 1
fi

$CERT_TEST_VENV/bin/python $CERT_TEST_VENV/acts/setup.py --quiet build --force
if [[ $? -ne 0 ]] ; then
    echo "Error building GD Python libraries"
    exit 1
fi

$CERT_TEST_VENV/bin/python $CERT_TEST_VENV/acts/setup.py --quiet install --skip-build --force $INSTALL_ARGS
if [[ $? -ne 0 ]] ; then
    echo "Error installing GD Python libraries"
    exit 1
fi

$CERT_TEST_VENV/bin/python -c "
import bluetooth_packets_python3 as bp3
bp3.BaseStruct
"
if [[ $? -ne 0 ]] ; then
  echo "Setup failed as bluetooth_packets_python3 cannot be imported"
  exit 1
fi

for n in $(seq $NUM_REPETITIONS); do
  $CERT_TEST_VENV/bin/python $CERT_TEST_VENV/bin/act.py \
      -c $TEST_CONFIG \
      $TEST_FILTER \
      -tp $CERT_TEST_VENV/acts
done

if [ "$CLEAN_VENV" != true ] ; then
  echo -e "${YELLOW}NOTE:${NOCOLOR} Completed tests using existing external libraries in virtualenv."
  echo -e "${YELLOW}NOTE:${NOCOLOR} To update external libraries, please add --clean option."
fi